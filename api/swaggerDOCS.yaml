swagger: "2.0"
info:
  description: |
    This is API for yKool
  version: 1.0.0
  title: yKool
  contact:
    email: soeoskarpaul@gmail.com
tags:
  - name: user
    description: user endpoints
  - name: course
    description: course endpoints
  - name: assignment
    description: assignment endpoints
# schemes:
# - http
paths:
  /course:
    post:
      tags:
        - course
      summary: Creates new course
      operationId: addCourse
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Course object that needs to be added to the store
          required: true
          schema:
            $ref: "#/definitions/Course"
      responses:
        405:
          description: Invalid input

  /user:
    post:
      tags:
        - user
      summary: Creates new user
      description: All user fields must be required.
      operationId: createUser
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Created user object
          required: true
          schema:
      responses:
        default:
          description: successful operation
  /user/login:
    get:
      tags:
        - user
      summary: Logs user into the system
      operationId: loginUser
      produces:
        - application/json
        - application/xml
      parameters:
        - name: username
          in: query
          description: The user name for login
          required: true
          type: string
        - name: password
          in: query
          description: The password for login in clear text
          required: true
          type: string
      responses:
        200:
          description: successful operation
          schema:
            type: string
          headers:
            X-Rate-Limit:
              type: integer
              format: int32
              description: calls per hour allowed by the user
            X-Expires-After:
              type: string
              format: date-time
              description: date in UTC when token expires
        400:
          description: Invalid username/password supplied
  /user/logout:
    get:
      tags:
        - user
      summary: Logs out current logged in user session
      operationId: logoutUser
      produces:
        - application/json
        - application/xml
      parameters: []
      responses:
        default:
          description: successful operation
  /user/{username}:
    get:
      tags:
        - user
      summary: Get user by user name
      operationId: getUserByName
      produces:
        - application/json
        - application/xml
      parameters:
        - name: username
          in: path
          description: The name that needs to be fetched. Use user1 for testing.
          required: true
          type: string
      responses:
        200:
          description: successful operation
          schema:
            $ref: "#/definitions/User"
        400:
          description: Invalid username supplied
        404:
          description: User not found
    delete:
      tags:
        - user
      summary: Delete user
      description: This can only be done by the logged in user.
      operationId: deleteUser
      produces:
        - application/json
        - application/xml
      parameters:
        - name: username
          in: path
          description: The name that needs to be deleted
          required: true
          type: string
      responses:
        400:
          description: Invalid username supplied
        404:
          description: User not found
securityDefinitions:
  petstore_auth:
    type: oauth2
    authorizationUrl: http://petstore.swagger.io/oauth/dialog
    flow: implicit
    scopes:
      write:pets: modify pets in your account
      read:pets: read your pets
  api_key:
    type: apiKey
    name: api_key
    in: header
definitions:
  User:
    type: object
    required:
      - email
      - fullName
      - hash
      - role
    properties:
      id:
        type: string
      email:
        type: string
      fullName:
        type: string
      hash:
        type: string
      role:
        type: integer
      courseID:
        type: array
        items:
          $ref: "#/definitions/Course"
      submissionID:
        type: array
        items:
          $ref: "#/definitions/Submission"
  Course:
    type: object
    required:
      - name
      - code
      - createdAt
    properties:
      id:
        type: string
        example: edsdk0a-dk191230d120kdaas
      name:
        type: string
        example: JavaScript basics
      code:
        type: string
        example: IF129301
      description:
        type: string
        example: Basic javascript 101
      teacherID:
        type: array
        items:
          type: string
      studentID:
        type: array
        items:
          type: string
      assignmentID:
        type: array
        items:
          type: string
      createdAt:
        type: string
        example: 2020/01/02
  Assignment:
    type: object
    required:
      - creatorID
      - createdAt
    properties:
      id:
        type: string
      creatorID:
        type: string
      endDate:
        type: string
        example: 2020/01/02
      description:
        type: string
      submissionID:
        type: array
        items:
          type: string
  Submission:
    type: object
    required:
      - userID
      - createdAt
    properties:
      id:
        type: string
      userID:
        type: string
      createdAd:
        type: string
        example: 2020/01/02
  ApiResponse:
    type: object
    properties:
      code:
        type: integer
        format: int32
      type:
        type: string
      message:
        type: string
schemes:
  - https
  - http
host: virtserver.swaggerhub.com
basePath: /MaikPython/yKool/1.0.0
